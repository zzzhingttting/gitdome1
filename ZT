using System;
namespace Topic
{
    public abstract class Duck
    {
        public FlyBehavior flyBehavior;
        public QuackBehavior quackBehavior;
        public Duck() { }
        public abstract void display();
        public void performFly()
        {
            flyBehavior.fly();
        }
        public void performQuack()
        {
            quackBehavior.quack();
        }
        public void swim()
        {
            Console.WriteLine("会游泳");
        }

    }
    public class MalardDuck : Duck
    {
        public MalardDuck()
        {
            quackBehavior = new Quack();
            flyBehavior = new FlyWithSwing();
        }

        public override void display()
        {

            Console.WriteLine("呱呱叫");
        }
    }
    public interface FlyBehavior
    {
        public void fly();
    }
    public class FlyWithSwing : FlyBehavior
    {
        public void fly()
        {
            Console.WriteLine("用翅膀飞");
        }
    }
    public interface QuackBehavior
    {
        public void quack();
    }
    public class Quack : QuackBehavior
    {
        public void quack()
        {
            Console.WriteLine("用腿跑");
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Duck duck1 = new MalardDuck();
            duck1.display();
            duck1.performFly();
            duck1.swim();

        }
    }
}





